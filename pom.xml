<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jzy3d</groupId>
	<artifactId>jzy3d-all</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Jzy3d Master Project</name>
	<url>http://www.jzy3d.org</url>
	<description>A java API to draw 3d charts.</description>

	<developers>
		<developer>
			<id>martin.pernollet</id>
			<name>Martin Pernollet</name>
			<email>martin@jzy3d.org</email>
			<url>http://twitter.com/jzy3d</url>
		</developer>
		<developer>
			<id>nils.hoffmann</id>
			<name>Nils Hoffmann</name>
		</developer>
		<developer>
			<id>juan.barandiaran</id>
			<name>Juan Barandiaran</name>
		</developer>
		<developer>
			<id>jacob.filik</id>
			<name>Jacob Filik</name>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The (New) BSD License</name>
			<url>http://www.opensource.org/licenses/bsd-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:https://github.com/jzy3d/jzy3d-api</connection>
	</scm>

	<issueManagement>
		<system>Github</system>
		<url>https://github.com/jzy3d/jzy3d-api/issues</url>
	</issueManagement>

	<modules>

		<module>jzy3d-core</module>
		<module>jzy3d-core-awt</module>
		<module>jzy3d-core-swt</module>

		<module>jzy3d-jGL</module>
		<module>jzy3d-emul-gl</module>

		<module>jzy3d-native-jogl-core</module>
		<module>jzy3d-native-jogl-awt</module>
		<module>jzy3d-native-jogl-newt</module>
		<!-- <module>jzy3d-native-jogl-javafx</module> -->
		<module>jzy3d-native-jogl-swing</module>
		<module>jzy3d-native-jogl-swt</module>

		<module>jzy3d-tester</module>
		<module>jzy3d-tester-native</module>

		<module>jzy3d-depthpeeling</module>

		<module>jzy3d-tutorials</module>


		<!-- Maths -->
		<module>jzy3d-jdt-core</module>
		<module>jzy3d-svm-mapper</module>
		<module>jzy3d-tools-libsvm</module>


		<module>jzy3d-io-xls</module>
		<module>jzy3d-io-reports</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.jzy3d>${project.version}</version.jzy3d>
		<version.java.source>1.8</version.java.source>
		<version.java.target>1.8</version.java.target>
		<version.mvn.compiler>3.0</version.mvn.compiler>
		<version.mvn.ftp>2.10</version.mvn.ftp>
		<version.mvn.deploy>2.4</version.mvn.deploy>
		<version.mvn.javadoc>2.9.1</version.mvn.javadoc>
		<version.mvn.release>2.5.3</version.mvn.release>
	</properties>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>



	<!-- Used to deploy to Jzy3d repository -->
	<distributionManagement>
		<repository>
			<id>jzy3d-ftp</id>
			<name>Jzy3d Maven Folder</name>
			<url>ftp://ftp.cluster013.ovh.net/maven/releases</url>
		</repository>
		<snapshotRepository>
			<id>jzy3d-ftp</id>
			<name>Jzy3d Maven Folder SNAPSHOTS</name>
			<url>ftp://ftp.cluster013.ovh.net/maven/snapshots</url>
		</snapshotRepository>
	</distributionManagement>


	<!--<distributionManagement> <snapshotRepository> <id>ossrh</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository> <repository> <id>ossrh</id> <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository> </distributionManagement> -->

	<!--To retrieve Jzy3d dependencies -->
	<repositories>
		<repository>
			<id>jzy3d-snapshots</id>
			<name>Jzy3d Snapshots</name>
			<url>https://maven.jzy3d.org/snapshots/</url>
		</repository>
		<repository>
			<id>jzy3d-releases</id>
			<name>Jzy3d Snapshots</name>
			<url>https://maven.jzy3d.org/releases/</url>
		</repository>
	</repositories>

	<build>
		<plugins>

			<!-- COMPILER AND JAVA VERSION CONFIGURATION -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.mvn.compiler}</version>
				<configuration>
					<source>${version.java.source}</source>
					<target>${version.java.target}</target>
				</configuration>
			</plugin>

			<!-- CONFIGURATION FOR RUNNING UNIT TESTS -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<includes>
					    <include>**/Test*.java</include>
					    <include>**/*Test.java</include>
							<!-- ITTest* are integration tests that should be run by failsafe (below)
									 but failsafe run is failing so may trigger ITTest using surefire.

									 But as ITTest fail when ran from another computer than mine (e.g. Github Workflow,
									 which is most probably due to thin differences between Github GPU and my MacBook GPU
									 we desactivate ITTest from base profile and will need to create a dedicated profiles
									 to run them.

									 Note that it may usefull to have the ability to have difference baseline image for
									 macos/window/linux in case JVM difference make jGL text rendering be different somehow.

							<include>**/ITTest*.java</include>-->
					</includes>
				</configuration>
			</plugin>

			<!-- CONFIGURATION FOR RUNNING INTEGRATION TESTS -->

			<!-- Use failsafe to run (and skip) integration tests which success may depend on
					GPU. Skip them with mvn install -DskipITs

					Replace in surefire	<include>**/ITTest*.java</include>

				<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M5</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>-->


			<!--SKIP deploy configuration <plugin> <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId> <version>${version.mvn.deploy}</version>
				<configuration> <skip>true</skip> </configuration> </plugin> -->

			<!-- SOURCE JAR -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>deploy</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- TEST JAR -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JAVADOC JAR -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${version.mvn.javadoc}</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
					<doclint>none</doclint>
					<source>8</source>
					<failOnError>false</failOnError>
					<stylesheetfile>doc/style/javadoc.css</stylesheetfile>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>deploy</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

      <!-- RELEASE -->

			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>${version.mvn.release}</version>
			</plugin>

			<!--<plugin> <groupId>org.sonatype.plugins</groupId> <artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version> <extensions>true</extensions> <configuration> <serverId>ossrh</serverId>
				<nexusUrl>https://oss.sonatype.org/</nexusUrl> <autoReleaseAfterClose>true</autoReleaseAfterClose>
				TO BE COMMENTED <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
				</configuration> </plugin> -->

			<!-- To sign artigact while deploying to Maven central via Sonatype -->

			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version> <executions> <execution> <id>sign-artifacts</id> <phase>deploy</phase>
				<goals> <goal>sign</goal> </goals> </execution> </executions> </plugin> -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>

				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>


			<!-- display active profile in compile phase
	    <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-help-plugin</artifactId>
	        <version>3.1.0</version>
	        <executions>
	            <execution>
	                <id>show-profiles</id>
	                <phase>compile</phase>
	                <goals>
	                    <goal>active-profiles</goal>
	                </goals>
	            </execution>
	        </executions>
	    </plugin>-->
		</plugins>

    <!-- DEPLOY TO FTP -->

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${version.mvn.ftp}</version>
			</extension>
		</extensions>


	</build>

	<profiles>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
	</profiles>

	<!-- Get coverage with mvn cobertura:cobertura -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<outputDirectory>./target/tmpCobertura</outputDirectory>
					<formats>
						<format>html</format>
					</formats>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
